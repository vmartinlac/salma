import sympy
import re

# state

x1, x2, x3 = sympy.symbols(('x1', 'x2', 'x3'))
a0, a1, a2, a3 = sympy.symbols(('a0', 'a1', 'a2', 'a3'))
v1, v2, v3 = sympy.symbols(('v1', 'v2', 'v3'))
w1, w2, w3 = sympy.symbols(('w1', 'w2', 'w3'))
y1, y2, y3 = sympy.symbols(('y1', 'y2', 'y3'))

# constants

c1, c2 = sympy.symbols(('c1', 'c2'))
f1, f2 = sympy.symbols(('f1', 'f2'))

# observation

R11 = 1 - 2*(a2*a2 + a3*a3)
R12 = 2*(a1*a2 - a3*a0)
R13 = 2*(a1*a3 + a2*a0)
R21 = R12
R22 = 1 - 2*(a1*a1 + a3*a3)
R23 = 2*(a2*a3 - a1*a0)
R31 = R13
R32 = R23
R33 = 1 - 2*(a1*a1 + a2*a2)

d1 = y1 - x1
d2 = y2 - x2
d3 = y3 - x3

ycam1 = R11*d1 + R21*d2 + R31*d3
ycam2 = R12*d1 + R22*d2 + R32*d3
ycam3 = R13*d1 + R23*d2 + R33*d3

u1 = c1 + f1 * ycam1/ycam3
u2 = c2 + f2 * ycam2/ycam3

state = [x1, x2, x3, a0, a1, a2, a3, v1, v2, v3, w1, w2, w3, y1, y2, y3]
out = [u1,u2]

print("// Generated by python script update.py")
print("// BEGIN")
for j in [0,1]:
    for i in [0,1,2,3,4,5,6,13,14,15]:
        prefix = "J.insert(2*i+" + str(j) + ", "+( str(i) if i < 13 else "13+3*i+"+str(i-13) )+") = "
        s = str(out[j].diff(state[i]))
        s = s.replace("(-x1 + y1)", "d1")
        s = s.replace("(-x2 + y2)", "d2")
        s = s.replace("(-x3 + y3)", "d3")
        s = s.replace("(-2*a0*a1 + 2*a2*a3)", "R23")
        s = s.replace("(-2*a0*a3 + 2*a1*a2)", "R12")
        s = s.replace("(2*a0*a2 + 2*a1*a3)", "R13")
        s = s.replace("(2*a0*a1 - 2*a2*a3)", "(-R23)")
        s = s.replace("(-2*a0*a2 - 2*a1*a3)", "(-R13)")
        s = s.replace("(-2*a2**2 - 2*a3**2 + 1)", "R11")
        s = s.replace("(-2*a1**2 - 2*a3**2 + 1)", "R22")
        s = s.replace("(-2*a1**2 - 2*a2**2 + 1)", "R33")
        s = s.replace("(d1*R11 + d2*R12 + d3*R13)", "ycam1")
        s = s.replace("(d1*R12 + d2*R22 + d3*R23)", "ycam2")
        s = s.replace("(d1*R13 + d2*R23 + d3*R33)", "ycam3")
        s = s.replace("(2*a2**2 + 2*a3**2 - 1)", "(-R11)")
        s = s.replace("(2*a0*a3 - 2*a1*a2)", "(-R12)")
        s = s.replace("(2*a1**2 + 2*a2**2 - 1)", "(-R33)")
        s = s.replace("ycam3**2", "(ycam3*ycam3)")
        s = s.replace("a1**2", "(a1*a1)")
        s = s.replace("a2**2", "(a2*a2)")
        s = s.replace("a3**2", "(a3*a3)")
        suffix = ";"
        print(prefix + s + suffix)
print("// END")

